<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example.springcourse</groupId>
    <artifactId>springcourse</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>springcourse Maven Webapp</name>
    <!-- FIXME change it to the project's website -->
    <url>http://www.example.com</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
        <spring.version>5.2.22.RELEASE</spring.version>
        <thymeleaf-spring5.version>3.0.15.RELEASE</thymeleaf-spring5.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework/spring-context -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework/spring-context -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- дальше зависимости для Spring MVC -->
        <!-- https://mvnrepository.com/artifact/org.springframework/spring-web -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!--    шаблонизатор для spring5-->
        <!-- https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf-spring5 -->
        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf-spring5</artifactId>
            <version>${thymeleaf-spring5.version}</version>
        </dependency>

        <!--    Зависимость для AbstractAnnotationConfigDispatcherServletInitializer-->
        <!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.1</version>
            <scope>provided</scope>
        </dependency>

        <!--    вариант значения scope – provided. Так как веб-приложение выполняется в среде веб-сервера, то в самом сервере -->
        <!--    уже могут быть установлены наиболее популярные библиотеки, например, hibernate или jsf. -->
        <!--    Таким образом, НЕТ необходимости упаковывать в файл проекта (war-файл) эти библиотеки, а нужно только те, которые -->
        <!--    являются редкими и которых наверняка не будет в стандартном джентльменском наборе хостинг-провайдера. -->
        <!--    Либо есть ситуация, когда версии библиотек, которые были установлены хостером, вам категорически не подходят. -->
        <!--    Тогда вам придется включать правильные версии в файл war. В любом случае нет смысла включать в файл веб-проекта -->
        <!--    те библиотеки, которые должны гарантированно быть на веб-сервере по стандарту (например, servlet-api).-->

        <!--    С другой стороны, если общих библиотек нет, и каждое веб-приложение будет содержать десятки мегабайт-->
        <!--    библиотеки, дублирующих библиотеки "вот того, соседнего приложения", то очень скоро встанет вопрос об исчерпании-->
        <!--    памяти, а, следовательно, медленной и неустойчивой работы.-->

        <!-- в репозитории Maven выбираем Hibernate Validator Engine -->
        <!-- чтобы не зависеть от Hibernate можем использовать javax.validation (Bean Validation API) -->
        <!-- https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
<!--            <version>8.0.0.Final</version> с последней версией не работает -->
            <version>6.1.6.Final</version>
        </dependency>

<!--        не помогла зависимость, валидация с ней не работала &lt;!&ndash; https://mvnrepository.com/artifact/javax.validation/validation-api &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>javax.validation</groupId>-->
<!--            <artifactId>validation-api</artifactId>-->
<!--            <version>2.0.1.Final</version>-->
<!--        </dependency>-->



    </dependencies>

    <build>
        <finalName>springcourse</finalName>
        <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
            <plugins>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.2.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
